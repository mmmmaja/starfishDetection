{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Starfish Detection","text":""},{"location":"#project-layout","title":"Project layout","text":"<pre><code>\u251c\u2500\u2500 .github/                  # Github actions and dependabot\n\u2502   \u251c\u2500\u2500 dependabot.yaml\n\u2502   \u2514\u2500\u2500 workflows/\n\u2502       \u2514\u2500\u2500 tests.yaml\n\u251c\u2500\u2500 configs/                  # Configuration files\n\u251c\u2500\u2500 data/                     # Data directory\n\u2502   \u251c\u2500\u2500 processed\n\u2502   \u2514\u2500\u2500 raw\n\u251c\u2500\u2500 dockerfiles/              # Dockerfiles\n\u2502   \u251c\u2500\u2500 api.Dockerfile\n\u2502   \u2514\u2500\u2500 train.Dockerfile\n\u251c\u2500\u2500 docs/                     # Documentation\n\u2502   \u251c\u2500\u2500 mkdocs.yml\n\u2502   \u2514\u2500\u2500 source/\n\u2502       \u2514\u2500\u2500 index.md\n\u251c\u2500\u2500 models/                   # Trained models\n\u251c\u2500\u2500 notebooks/                # Jupyter notebooks\n\u251c\u2500\u2500 reports/                  # Reports\n\u2502   \u2514\u2500\u2500 figures/\n\u251c\u2500\u2500 src/                      # Source code\n\u2502   \u251c\u2500\u2500 project_name/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 api.py\n\u2502   \u2502   \u251c\u2500\u2500 data.py\n\u2502   \u2502   \u251c\u2500\u2500 evaluate.py\n\u2502   \u2502   \u251c\u2500\u2500 models.py\n\u2502   \u2502   \u251c\u2500\u2500 train.py\n\u2502   \u2502   \u2514\u2500\u2500 visualize.py\n\u2514\u2500\u2500 tests/                    # Tests\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 test_api.py\n\u2502   \u251c\u2500\u2500 test_data.py\n\u2502   \u2514\u2500\u2500 test_model.py\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 .pre-commit-config.yaml\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 pyproject.toml            # Python project file\n\u251c\u2500\u2500 README.md                 # Project README\n\u251c\u2500\u2500 requirements.txt          # Project requirements\n\u251c\u2500\u2500 requirements_dev.txt      # Development requirements\n\u2514\u2500\u2500 tasks.py                  # Project tasks\n</code></pre>"},{"location":"training/","title":"Training","text":""},{"location":"training/#environment","title":"Environment","text":"<p>Create a dedicated environment to keep track of the packages for the project</p> <pre><code>conda create --name starfish-env python=3.11\nconda activate starfish-env\npip install -r requirements.txt\npip install -r requirements_dev.txt\npip install -e .\n</code></pre>"},{"location":"training/#data","title":"Data","text":"<p>Download the data for the project from our Google Cloud Bucket, which requires the Google Cloud SDK.</p> <pre><code>invoke download-data\n</code></pre>"},{"location":"training/#train","title":"Train","text":"<p>Train with default arguments</p> <pre><code>train\n</code></pre> <p>Train with data downloaded from the bucket rather than accessing it directly from the cloud</p> <pre><code>train data.data_from_bucket=false\n</code></pre>"},{"location":"training/#profiling","title":"Profiling","text":"<p>Train with profiling</p> <pre><code>train profiling=True\n</code></pre> <p>Profile forward pass</p> <pre><code>invoke profile-forward-pass\n</code></pre>"},{"location":"training/#docker","title":"Docker","text":"<p>Build the training dockerfile into a Docker image</p> <pre><code>invoke build-train-image\n</code></pre> <p>Run a container spawned from the docker image</p> <pre><code>invoke run-train-image\n</code></pre>"},{"location":"training/#vertex-ai","title":"Vertex AI","text":"<p>Get the Docker image built from <code>train.dockerfile</code> in the Artifact Registry on Google Cloud, for example by creating a trigger and using the <code>cloudbuild.yaml</code> file. Then you can train a model using that Docker image through the Vertex AI service. This also automatically logs the training to Wandb if your API key has been stored as a secret in Google Cloud.</p> <pre><code>invoke train-vertex\n</code></pre>"},{"location":"training/#wandb","title":"Wandb","text":"<p>Login</p> <pre><code>wandb login\n</code></pre> <p>Hyperparameter sweep</p> <pre><code>invoke sweep\nwandb agent ENTITY/PROJECT_NAME/AGENT_ID\n</code></pre>"},{"location":"training/#tests","title":"Tests","text":"<p>Run all tests and calculate coverage</p> <pre><code>invoke test\n</code></pre> <p>Run data tests</p> <pre><code>invoke test-data\n</code></pre> <p>Run model tests</p> <pre><code>invoke test-model\n</code></pre>"}]}